{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","onClick","className","alt","src","CardList","robots","onCardClick","cardComponents","map","user","i","SearchBox","searchChange","searchField","type","placeholder","value","onChange","Scroll","props","style","overflow","height","children","ErrorBoundary","state","hasError","error","info","this","setState","harError","React","Component","App","onSearchChange","event","console","log","target","fetch","then","response","responseJson","json","users","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.967e263b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id, onClick}) => {\r\n\treturn (\r\n\t\t<div className='dib' id={name} onClick={onClick}>\r\n\t\t\t<div id={name} className='bg-light-green br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t\t<img id={name} alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t\t<div id={name}>\r\n\t\t\t\t\t<h2 id={name}>{name}</h2>\r\n\t\t\t\t\t<p id={name}>j{email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots, onCardClick }) => {\r\n\tconst cardComponents = robots.map((user, i) => {\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={user.id} \r\n\t\t\t\tname={user.name} \r\n\t\t\t\temail={user.email}\r\n\t\t\t\tonClick={onCardClick}\r\n\t\t\t/>\r\n\t\t);\r\n\t})\r\n\treturn (\r\n\t    <div className='tc'>\r\n\t    \t{cardComponents}\r\n\t    </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange, searchField}) => {\r\n\treturn (\r\n\t\t<div className='pa3 tc'>\r\n\t\t\t<input \r\n\t\t\t\tclassName='input-reset ba b--black-20 pa2 mb2' \r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tvalue = {searchField}\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflow: 'scroll', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll","import React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.harError) {\r\n\t\t\treturn <h1>Ooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary","import React from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js'\r\nimport Scroll from '../components/Scroll.js'\r\nimport ErrorBoundary from '../components/ErrorBoundary.js'\r\n// import { robots } from './robots'\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\t\trobots: [],\r\n\t\t\t\tsearchField: '',\r\n\t\t}\r\n\t\tconsole.log(\"constructor\")\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => {\r\n\t\t\t\tlet responseJson = response.json()\r\n\t\t\t\tconsole.log(responseJson)\r\n\t\t\t\treturn responseJson\r\n\t\t\t})\r\n\t\t\t.then(users => {\r\n\t\t\t\tconsole.log(users)\r\n\t\t\t\tthis.setState({ robots: users })\r\n\t\t\t})\r\n\t\tconsole.log(\"componentDidMount\")\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tconsole.log(\"onSearchChange\")\r\n\t\tthis.setState({ searchField: event.target.value });\r\n\t};\r\n\tonCardClick = (event) => {\r\n\t\tconsole.log(\"onCardClick\")\r\n\t\tthis.setState({ searchField: event.target.id })\r\n\t}\r\n\trender() {\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n\t\t})\r\n\t\tconsole.log(\"render\")\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='f-headline lh-solid tc'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} searchField={this.state.searchField} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundary>\r\n\r\n\t\t\t\t\t\t<CardList onCardClick={this.onCardClick} robots={filteredRobots}/>\r\n\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t\t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}